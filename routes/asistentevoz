const express = require("express");
const router = express.Router();
const AsistenteVoz = require("../models/AsistenteVoz");

// Obtener todas las interacciones del asistente de voz
router.get("/", async (req, res) => {
  try {
    const asistenteVoz = await AsistenteVoz.find();
    res.json(asistenteVoz);
  } catch (error) {
    res.status(500).json({ mensaje: "Error al obtener datos del asistente de voz", error });
  }
});

// Crear una nueva interacción del asistente de voz
router.post("/", async (req, res) => {
  try {
    const nuevaInteraccion = new AsistenteVoz(req.body);
    await nuevaInteraccion.save();
    res.status(201).json(nuevaInteraccion);
  } catch (error) {
    res.status(400).json({ mensaje: "Error al registrar interacción", error });
  }
});

// Obtener una interacción específica por ID
router.get("/:id", async (req, res) => {
  try {
    const interaccion = await AsistenteVoz.findById(req.params.id);
    if (!interaccion) return res.status(404).json({ mensaje: "Interacción no encontrada" });
    res.json(interaccion);
  } catch (error) {
    res.status(500).json({ mensaje: "Error al obtener interacción", error });
  }
});

// Actualizar una interacción
router.put("/:id", async (req, res) => {
  try {
    const interaccionActualizada = await AsistenteVoz.findByIdAndUpdate(req.params.id, req.body, { new: true });
    res.json(interaccionActualizada);
  } catch (error) {
    res.status(400).json({ mensaje: "Error al actualizar interacción", error });
  }
});

// Eliminar una interacción
router.delete("/:id", async (req, res) => {
  try {
    await AsistenteVoz.findByIdAndDelete(req.params.id);
    res.json({ mensaje: "Interacción eliminada correctamente" });
  } catch (error) {
    res.status(500).json({ mensaje: "Error al eliminar interacción", error });
  }
});

module.exports = router;
